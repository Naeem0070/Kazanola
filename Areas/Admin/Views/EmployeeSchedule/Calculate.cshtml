@model Kazanola.ViewModels.EmployeeScheduleViewModel
@{
    ViewData["Title"] = "Calculate";
}

<h1>Calculate</h1>

<div class="col-md-6 d-flex align-items-center mb-3">
    <label asp-for="EmployeeID" class="control-label"></label>
    <div class="col-sm-8">
        <select asp-for="EmployeeID" class="form-select select2"
                asp-items="@(new SelectList(Model.EmployeesList, "EmployeeID", "EmployeeName"))">
            <option value="">-- اختر --</option>
        </select>
        <span asp-validation-for="EmployeeID" class="text-danger"></span>
    </div>
</div>

<div class="col-md-6 d-flex align-items-center mb-3">
    <label class="col-sm-4 col-form-label bold">Start Date & Time</label>
    <div class="col-sm-8">
        <input type="datetime-local" id="startDate" class="form-control" />
    </div>
</div>

<div class="col-md-6 d-flex align-items-center mb-3">
    <label class="col-sm-4 col-form-label bold">End Date & Time</label>
    <div class="col-sm-8">
        <input type="datetime-local" id="endDate" class="form-control" />
    </div>
</div>

<button class="btn btn-primary" id="calcTotal">احسب المجموع</button>

<div>
    المجموع: <span id="totalAmount"></span> ساعة <br />
    الراتب الكلي: <span id="totalSalary"></span> دينار أردني
</div>

<section class="section">
    <div class="row">
        <div class="col-lg-12">
            <div class="card shadow-sm pt-5">
                <div class="card-body">
                    <table class="table datatable table-hover table-striped text-center table-bordered">
                        <thead class="table-dark">
                            <tr>
                                <th>@Html.DisplayNameFor(model => model.Employee.EmployeeName)</th>
                                <th>@Html.DisplayNameFor(model => model.Employee.HourlyRate)</th>
                                <th>@Html.DisplayNameFor(model => model.StartTime)</th>
                                <th>@Html.DisplayNameFor(model => model.EndTime)</th>
                                <th>@Html.DisplayNameFor(model => model.Hours)</th>
                            </tr>
                        </thead>
                        <tbody id="scheduleTable">
                            @foreach (var item in Model.EmployeeSchedulesList)
                            {
                                <tr data-employeeid="@item.EmployeeID" data-date="@item.StartTime?.ToString("yyyy-MM-dd")">
                                    <td>@Html.DisplayFor(modelItem => item.Employee.EmployeeName)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Employee.HourlyRate)</td>
                                    <td>@item.StartTime?.ToString("yyyy-MM-dd HH:mm")</td>
                                    <td>@item.EndTime?.ToString("yyyy-MM-dd HH:mm")</td>
                                    <td>@item.Hours</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>

@section scripts {
    <script>
        $(document).ready(function () {
            $('.select2').select2({
                placeholder: "-- اختر الموظف --",
                allowClear: true
            });

            $('#calcTotal').click(function () {
                let selectedEmp = $('#EmployeeID').val();
                let start = new Date($('#startDate').val());
                let end = new Date($('#endDate').val());

                let totalHours = 0;
                let hourlyRate = 0;

                $('#scheduleTable tr').each(function () {
                    let empId = $(this).data('employeeid')?.toString();
                    let dayStr = $(this).data('date');
                    let hoursStr = $(this).find('td:eq(4)').text().trim(); // العمود الخامس = عدد الساعات
                    let rateStr = $(this).find('td:eq(1)').text().trim(); // العمود الثاني = HourlyRate

                    if (empId && dayStr && hoursStr && rateStr) {
                        let date = new Date(dayStr);
                        let hours = parseFloat(hoursStr);
                        let rate = parseFloat(rateStr);

                        if (!isNaN(date) && !isNaN(hours) && !isNaN(rate) &&
                            date >= start && date <= end &&
                            (selectedEmp === "" || selectedEmp === empId)) {

                            totalHours += hours;
                            hourlyRate = rate; // بما إنه موظف واحد، نحتفظ بأجره
                        }
                    }
                });

                let totalSalary = totalHours * hourlyRate;

                $('#totalAmount').text(totalHours.toFixed(2));
                $('#totalSalary').text(totalSalary.toFixed(2));
            });
        });
    </script>
}
